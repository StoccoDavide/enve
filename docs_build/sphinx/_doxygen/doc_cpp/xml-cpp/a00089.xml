<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="a00089" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>enve::shape</compoundname>
    <derivedcompoundref refid="a00069" prot="public" virt="non-virtual">enve::hyperellipse</derivedcompoundref>
    <derivedcompoundref refid="a00077" prot="public" virt="non-virtual">enve::points</derivedcompoundref>
    <derivedcompoundref refid="a00081" prot="public" virt="non-virtual">enve::polynom</derivedcompoundref>
    <includes refid="a00017" local="no">enve_shape.hh</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="a00089_1a3ce2310bdfbf3557035dc8133d0b0f88" prot="public" static="no">
        <type>std::shared_ptr&lt; <ref refid="a00089" kindref="compound">shape</ref> const  &gt;</type>
        <definition>typedef std::shared_ptr&lt;shape const&gt; enve::shape::ptr</definition>
        <argsstring></argsstring>
        <name>ptr</name>
        <briefdescription>
<para>Pointer to shape object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/enve_shape.hh" line="60" column="29" bodyfile="include/enve_shape.hh" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a00089_1a49d70ac4952e445499b69eb28f182eb8" prot="public" static="no">
        <type>std::vector&lt; <ref refid="a00089_1a3ce2310bdfbf3557035dc8133d0b0f88" kindref="member">shape::ptr</ref> &gt;</type>
        <definition>typedef std::vector&lt;shape::ptr&gt; enve::shape::vecptr</definition>
        <argsstring></argsstring>
        <name>vecptr</name>
        <briefdescription>
<para>Vector of pointers to shape objects. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/enve_shape.hh" line="61" column="30" bodyfile="include/enve_shape.hh" bodystart="61" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="a00089_1a60dd88c2bd58b71d534cc92d6d5f56f9" prot="private" static="no" mutable="no">
        <type>real</type>
        <definition>real enve::shape::m_maxR</definition>
        <argsstring></argsstring>
        <name>m_maxR</name>
        <initializer>= QUIET_NAN</initializer>
        <briefdescription>
<para>Maximum surface maximum radius (m) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/enve_shape.hh" line="63" column="10" bodyfile="include/enve_shape.hh" bodystart="63" bodyend="-1"/>
        <referencedby refid="a00089_1a01bf679dac42a6a354f3ec1327402bef" compoundref="a00047" startline="95" endline="101">copy</referencedby>
        <referencedby refid="a00089_1aa509c8fa017ef7500110beae8289b514" compoundref="a00047" startline="106" endline="114">isApprox</referencedby>
        <referencedby refid="a00089_1a25fb65951d112f9f4595b07c8c8b3630" compoundref="a00047" startline="207" endline="215">print</referencedby>
        <referencedby refid="a00089_1a451509b55546ad54f4d816786554f79e" compoundref="a00047" startline="74" endline="90">shape</referencedby>
        <referencedby refid="a00089_1ac85f00278892b2330e9325209a16e478" compoundref="a00047" startline="119" endline="123">surfaceMaxRadius</referencedby>
      </memberdef>
      <memberdef kind="variable" id="a00089_1aa637dc06ac5012754a88ff504b55127e" prot="private" static="no" mutable="no">
        <type>real</type>
        <definition>real enve::shape::m_minY</definition>
        <argsstring></argsstring>
        <name>m_minY</name>
        <initializer>= QUIET_NAN</initializer>
        <briefdescription>
<para>Minimum surface bound on y axis (m) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/enve_shape.hh" line="64" column="10" bodyfile="include/enve_shape.hh" bodystart="64" bodyend="-1"/>
        <referencedby refid="a00089_1a21cf4f513087dd2abb003fec5d92c1d1" compoundref="a00047" startline="189" endline="202">checkWidthBound</referencedby>
        <referencedby refid="a00089_1a01bf679dac42a6a354f3ec1327402bef" compoundref="a00047" startline="95" endline="101">copy</referencedby>
        <referencedby refid="a00089_1aa509c8fa017ef7500110beae8289b514" compoundref="a00047" startline="106" endline="114">isApprox</referencedby>
        <referencedby refid="a00089_1a25fb65951d112f9f4595b07c8c8b3630" compoundref="a00047" startline="207" endline="215">print</referencedby>
        <referencedby refid="a00089_1a451509b55546ad54f4d816786554f79e" compoundref="a00047" startline="74" endline="90">shape</referencedby>
        <referencedby refid="a00089_1a84f2e4ba9b2d14b40c28c13808f52b0b" compoundref="a00047" startline="136" endline="140">surfaceMaxWidth</referencedby>
        <referencedby refid="a00089_1afa694bcea531f52cbc33c4586202e1a8" compoundref="a00047" startline="179" endline="184">surfaceWidth</referencedby>
        <referencedby refid="a00089_1a2d34c12f16852f76da529c00abc9d4a6" compoundref="a00047" startline="145" endline="149">surfaceWidthLowerBound</referencedby>
      </memberdef>
      <memberdef kind="variable" id="a00089_1a6bf4c2c1ef6049a4a5748cc1e64497b6" prot="private" static="no" mutable="no">
        <type>real</type>
        <definition>real enve::shape::m_maxY</definition>
        <argsstring></argsstring>
        <name>m_maxY</name>
        <initializer>= QUIET_NAN</initializer>
        <briefdescription>
<para>Maximum surface bound on y axis (m) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/enve_shape.hh" line="65" column="10" bodyfile="include/enve_shape.hh" bodystart="65" bodyend="-1"/>
        <referencedby refid="a00089_1a21cf4f513087dd2abb003fec5d92c1d1" compoundref="a00047" startline="189" endline="202">checkWidthBound</referencedby>
        <referencedby refid="a00089_1a01bf679dac42a6a354f3ec1327402bef" compoundref="a00047" startline="95" endline="101">copy</referencedby>
        <referencedby refid="a00089_1aa509c8fa017ef7500110beae8289b514" compoundref="a00047" startline="106" endline="114">isApprox</referencedby>
        <referencedby refid="a00089_1a25fb65951d112f9f4595b07c8c8b3630" compoundref="a00047" startline="207" endline="215">print</referencedby>
        <referencedby refid="a00089_1a451509b55546ad54f4d816786554f79e" compoundref="a00047" startline="74" endline="90">shape</referencedby>
        <referencedby refid="a00089_1a84f2e4ba9b2d14b40c28c13808f52b0b" compoundref="a00047" startline="136" endline="140">surfaceMaxWidth</referencedby>
        <referencedby refid="a00089_1afa694bcea531f52cbc33c4586202e1a8" compoundref="a00047" startline="179" endline="184">surfaceWidth</referencedby>
        <referencedby refid="a00089_1aa55f0ba9ddef8f1dca8e7ee13726c5e0" compoundref="a00047" startline="162" endline="166">surfaceWidthUpperBound</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="a00089_1acecd8531fa8ba0ffbc75d6234140c6a1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual enve::shape::~shape</definition>
        <argsstring>(void)</argsstring>
        <name>~shape</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Shape class destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/enve_shape.hh" line="69" column="13" bodyfile="include/enve_shape.hh" bodystart="69" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="a00089_1ad73f91566c660897b63fa840f9a78412" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>enve::shape::shape</definition>
        <argsstring>(void)</argsstring>
        <name>shape</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Shape class constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/enve_shape.hh" line="72" column="5" bodyfile="src/enve_shape.cc" bodystart="50" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="a00089_1a1df9aab204c0a93923c233ccf0bfd54c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>enve::shape::shape</definition>
        <argsstring>(real maxR, real minY, real maxY)</argsstring>
        <name>shape</name>
        <param>
          <type>real</type>
          <declname>maxR</declname>
          <briefdescription><para>Maximum surface maximum radius (m) </para>
</briefdescription>
        </param>
        <param>
          <type>real</type>
          <declname>minY</declname>
          <briefdescription><para>Minimum surface bound on y axis (m) </para>
</briefdescription>
        </param>
        <param>
          <type>real</type>
          <declname>maxY</declname>
          <briefdescription><para>Maximum surface bound on y axis (m) </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Shape class constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/enve_shape.hh" line="75" column="5" bodyfile="src/enve_shape.cc" bodystart="56" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="a00089_1a451509b55546ad54f4d816786554f79e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>enve::shape::shape</definition>
        <argsstring>(vecN const &amp;dataR, vecN const &amp;dataY)</argsstring>
        <name>shape</name>
        <param>
          <type>vecN const &amp;</type>
          <declname>dataR</declname>
          <briefdescription><para>Vector of radius data (m) </para>
</briefdescription>
        </param>
        <param>
          <type>vecN const &amp;</type>
          <declname>dataY</declname>
          <briefdescription><para>Vector of y data (m) </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Shape class constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/enve_shape.hh" line="82" column="5" bodyfile="src/enve_shape.cc" bodystart="74" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="a00089_1a01bf679dac42a6a354f3ec1327402bef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void enve::shape::copy</definition>
        <argsstring>(shape const &amp;shape_in)</argsstring>
        <name>copy</name>
        <param>
          <type><ref refid="a00089" kindref="compound">shape</ref> const &amp;</type>
          <declname>shape_in</declname>
          <briefdescription><para>Shape object to be copied </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Copy shape object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/enve_shape.hh" line="89" column="5" bodyfile="src/enve_shape.cc" bodystart="95" bodyend="101"/>
        <referencedby refid="a00069_1ab541910296cb5b34e16e314fa129df3d" compoundref="a00041" startline="79" endline="88">enve::hyperellipse::copy</referencedby>
        <referencedby refid="a00077_1a028b84139da3daf212ca5dabb484d85f" compoundref="a00038" startline="65" endline="71">enve::points::copy</referencedby>
        <referencedby refid="a00081_1a922eaa302e86ba235161fbad3186293f" compoundref="a00050" startline="85" endline="90">enve::polynom::copy</referencedby>
      </memberdef>
      <memberdef kind="function" id="a00089_1aa509c8fa017ef7500110beae8289b514" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool enve::shape::isApprox</definition>
        <argsstring>(shape const &amp;shape_in, real tolerance=EPSILON_LOW) const</argsstring>
        <name>isApprox</name>
        <param>
          <type><ref refid="a00089" kindref="compound">shape</ref> const &amp;</type>
          <declname>shape_in</declname>
          <briefdescription><para>Shape object </para>
</briefdescription>
        </param>
        <param>
          <type>real</type>
          <declname>tolerance</declname>
          <defval>EPSILON_LOW</defval>
          <briefdescription><para>Tolerance </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Check if objects are (almost) equal. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/enve_shape.hh" line="95" column="5" bodyfile="src/enve_shape.cc" bodystart="106" bodyend="114"/>
        <referencedby refid="a00069_1a468ee3cb68db630cbf8bda8047f73da3" compoundref="a00041" startline="93" endline="104">enve::hyperellipse::isApprox</referencedby>
        <referencedby refid="a00077_1a68336282aebd2b9df6016de9636a32de" compoundref="a00038" startline="76" endline="87">enve::points::isApprox</referencedby>
        <referencedby refid="a00081_1a2f8207c750bc8f09c136eeb878090889" compoundref="a00050" startline="95" endline="105">enve::polynom::isApprox</referencedby>
      </memberdef>
      <memberdef kind="function" id="a00089_1ac85f00278892b2330e9325209a16e478" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>real const &amp;</type>
        <definition>real const  &amp; enve::shape::surfaceMaxRadius</definition>
        <argsstring>(void) const</argsstring>
        <name>surfaceMaxRadius</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get surface maximum radius const reference (m) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/enve_shape.hh" line="102" column="5" bodyfile="src/enve_shape.cc" bodystart="119" bodyend="123"/>
        <referencedby refid="a00069_1aa04e522a0f22486086184c7da6b7435d" compoundref="a00041" startline="194" endline="199">enve::hyperellipse::updateBounds</referencedby>
      </memberdef>
      <memberdef kind="function" id="a00089_1a3a2d0b37330222933ceb591d1c80c82e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>real &amp;</type>
        <definition>real &amp; enve::shape::surfaceMaxRadius</definition>
        <argsstring>(void)</argsstring>
        <name>surfaceMaxRadius</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get surface maximum radius on reference (m) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/enve_shape.hh" line="106" column="5" bodyfile="src/enve_shape.cc" bodystart="128" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="a00089_1a84f2e4ba9b2d14b40c28c13808f52b0b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>real</type>
        <definition>real enve::shape::surfaceMaxWidth</definition>
        <argsstring>(void) const</argsstring>
        <name>surfaceMaxWidth</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get surface maximum width on y axis (m) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/enve_shape.hh" line="110" column="5" bodyfile="src/enve_shape.cc" bodystart="136" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="a00089_1a2d34c12f16852f76da529c00abc9d4a6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>real const &amp;</type>
        <definition>real const  &amp; enve::shape::surfaceWidthLowerBound</definition>
        <argsstring>(void) const</argsstring>
        <name>surfaceWidthLowerBound</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get surface minimum width const reference (m) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/enve_shape.hh" line="114" column="5" bodyfile="src/enve_shape.cc" bodystart="145" bodyend="149"/>
        <referencedby refid="a00069_1aa04e522a0f22486086184c7da6b7435d" compoundref="a00041" startline="194" endline="199">enve::hyperellipse::updateBounds</referencedby>
      </memberdef>
      <memberdef kind="function" id="a00089_1abcbef9ab73ba72c1ab7723f7026371b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>real &amp;</type>
        <definition>real &amp; enve::shape::surfaceWidthLowerBound</definition>
        <argsstring>(void)</argsstring>
        <name>surfaceWidthLowerBound</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get surface minimum width on reference (m) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/enve_shape.hh" line="118" column="5" bodyfile="src/enve_shape.cc" bodystart="154" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="a00089_1aa55f0ba9ddef8f1dca8e7ee13726c5e0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>real const &amp;</type>
        <definition>real const  &amp; enve::shape::surfaceWidthUpperBound</definition>
        <argsstring>(void) const</argsstring>
        <name>surfaceWidthUpperBound</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get surface maximum width const reference (m) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/enve_shape.hh" line="122" column="5" bodyfile="src/enve_shape.cc" bodystart="162" bodyend="166"/>
        <referencedby refid="a00069_1aa04e522a0f22486086184c7da6b7435d" compoundref="a00041" startline="194" endline="199">enve::hyperellipse::updateBounds</referencedby>
      </memberdef>
      <memberdef kind="function" id="a00089_1a968a6c23bd4c145ca4fb14be213d374c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>real &amp;</type>
        <definition>real &amp; enve::shape::surfaceWidthUpperBound</definition>
        <argsstring>(void)</argsstring>
        <name>surfaceWidthUpperBound</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get surface maximum width on reference (m) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/enve_shape.hh" line="126" column="5" bodyfile="src/enve_shape.cc" bodystart="171" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="a00089_1afa694bcea531f52cbc33c4586202e1a8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>real</type>
        <definition>real enve::shape::surfaceWidth</definition>
        <argsstring>(void) const</argsstring>
        <name>surfaceWidth</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get surface width (m) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/enve_shape.hh" line="130" column="5" bodyfile="src/enve_shape.cc" bodystart="179" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="a00089_1a21cf4f513087dd2abb003fec5d92c1d1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool enve::shape::checkWidthBound</definition>
        <argsstring>(real y) const</argsstring>
        <name>checkWidthBound</name>
        <param>
          <type>real</type>
          <declname>y</declname>
          <briefdescription><para>Coordinate of y axis </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Get surface maximum width on reference (m) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/enve_shape.hh" line="134" column="5" bodyfile="src/enve_shape.cc" bodystart="189" bodyend="202"/>
        <referencedby refid="a00077_1af34877c458c34b5090c7bc22b00eb6b9" compoundref="a00038" startline="173" endline="184">enve::points::lowerBound</referencedby>
        <referencedby refid="a00069_1ad377d4618e67f96ceaa4a16047e86898" compoundref="a00041" startline="217" endline="235">enve::hyperellipse::surfaceDerivative</referencedby>
        <referencedby refid="a00077_1aeae1cd947511843588bed9cc34e05fac" compoundref="a00038" startline="217" endline="226">enve::points::surfaceDerivative</referencedby>
        <referencedby refid="a00081_1a34738229882daa930770c4863443b490" compoundref="a00050" startline="124" endline="134">enve::polynom::surfaceDerivative</referencedby>
        <referencedby refid="a00069_1ac179ee99fb621153a921271df6748fe3" compoundref="a00041" startline="204" endline="212">enve::hyperellipse::surfaceRadius</referencedby>
        <referencedby refid="a00077_1a1c8e9c0f5aa2253f82b789115d656d1d" compoundref="a00038" startline="205" endline="212">enve::points::surfaceRadius</referencedby>
        <referencedby refid="a00081_1a84656dbac8235f5dd9c4663c2db51d98" compoundref="a00050" startline="110" endline="119">enve::polynom::surfaceRadius</referencedby>
        <referencedby refid="a00077_1ae88997a5bf97baaaf3ae253f9106aab5" compoundref="a00038" startline="189" endline="200">enve::points::upperBound</referencedby>
      </memberdef>
      <memberdef kind="function" id="a00089_1aa66cc1f3a1f9fea9185f274015900da3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>real</type>
        <definition>virtual real enve::shape::surfaceRadius</definition>
        <argsstring>(real y) const =0</argsstring>
        <name>surfaceRadius</name>
        <reimplementedby refid="a00069_1ac179ee99fb621153a921271df6748fe3">surfaceRadius</reimplementedby>
        <reimplementedby refid="a00077_1a1c8e9c0f5aa2253f82b789115d656d1d">surfaceRadius</reimplementedby>
        <reimplementedby refid="a00081_1a84656dbac8235f5dd9c4663c2db51d98">surfaceRadius</reimplementedby>
        <param>
          <type>real</type>
          <declname>y</declname>
          <briefdescription><para>Coordinate of y axis </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Get surface of revolution rib radius at y axis coordinate. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/enve_shape.hh" line="140" column="5"/>
      </memberdef>
      <memberdef kind="function" id="a00089_1aa6e1551c4b716b5fd41e91c83ca2abd3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>real</type>
        <definition>virtual real enve::shape::surfaceDerivative</definition>
        <argsstring>(real y, real tolerance=EPSILON_MEDIUM) const =0</argsstring>
        <name>surfaceDerivative</name>
        <reimplementedby refid="a00069_1ad377d4618e67f96ceaa4a16047e86898">surfaceDerivative</reimplementedby>
        <reimplementedby refid="a00077_1aeae1cd947511843588bed9cc34e05fac">surfaceDerivative</reimplementedby>
        <reimplementedby refid="a00081_1a34738229882daa930770c4863443b490">surfaceDerivative</reimplementedby>
        <param>
          <type>real</type>
          <declname>y</declname>
          <briefdescription><para>Coordinate of y axis </para>
</briefdescription>
        </param>
        <param>
          <type>real</type>
          <declname>tolerance</declname>
          <defval>EPSILON_MEDIUM</defval>
          <briefdescription><para>Tolerance </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Get surface of revolution rib first derivative with respect to y coordinate. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/enve_shape.hh" line="146" column="5"/>
      </memberdef>
      <memberdef kind="function" id="a00089_1a42c8dc5ce2976b3e078f696b042c9f32" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>real</type>
        <definition>virtual real enve::shape::surfaceAngle</definition>
        <argsstring>(real y, real tolerance=EPSILON_MEDIUM) const =0</argsstring>
        <name>surfaceAngle</name>
        <reimplementedby refid="a00069_1a8978db526eef828312e4ced3d2e0f6bb">surfaceAngle</reimplementedby>
        <reimplementedby refid="a00077_1af027403c9808b41fccf66702964de2a1">surfaceAngle</reimplementedby>
        <reimplementedby refid="a00081_1a2a80ac227415844e8835f2d1fb6a66e8">surfaceAngle</reimplementedby>
        <param>
          <type>real</type>
          <declname>y</declname>
          <briefdescription><para>Coordinate of y axis </para>
</briefdescription>
        </param>
        <param>
          <type>real</type>
          <declname>tolerance</declname>
          <defval>EPSILON_MEDIUM</defval>
          <briefdescription><para>Tolerance </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Get surface of revolution rib angle with respect to y axis (rad) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/enve_shape.hh" line="153" column="5"/>
      </memberdef>
      <memberdef kind="function" id="a00089_1a25fb65951d112f9f4595b07c8c8b3630" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void enve::shape::print</definition>
        <argsstring>(out_stream &amp;os) const</argsstring>
        <name>print</name>
        <param>
          <type>out_stream &amp;</type>
          <declname>os</declname>
          <briefdescription><para>Output stream type </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Print surface shape data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/enve_shape.hh" line="160" column="5" bodyfile="src/enve_shape.cc" bodystart="207" bodyend="215"/>
        <referencedby refid="a00069_1ad33ac9c2a57ea33209d9e5a67ab89faa" compoundref="a00041" startline="251" endline="263">enve::hyperellipse::print</referencedby>
        <referencedby refid="a00077_1a3880f1ee3cc36d14d327a3c646964cb8" compoundref="a00038" startline="242" endline="254">enve::points::print</referencedby>
        <referencedby refid="a00081_1a7fee7942fdfc90caa85bce08663e9489" compoundref="a00050" startline="150" endline="159">enve::polynom::print</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Shell surface geometry. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>enve::hyperellipse</label>
        <link refid="a00069"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>enve::points</label>
        <link refid="a00077"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>enve::polynom</label>
        <link refid="a00081"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>enve::shape</label>
        <link refid="a00089"/>
      </node>
    </inheritancegraph>
    <location file="include/enve_shape.hh" line="57" column="3" bodyfile="include/enve_shape.hh" bodystart="58" bodyend="164"/>
    <listofallmembers>
      <member refid="a00089_1a21cf4f513087dd2abb003fec5d92c1d1" prot="public" virt="non-virtual"><scope>enve::shape</scope><name>checkWidthBound</name></member>
      <member refid="a00089_1a01bf679dac42a6a354f3ec1327402bef" prot="public" virt="non-virtual"><scope>enve::shape</scope><name>copy</name></member>
      <member refid="a00089_1aa509c8fa017ef7500110beae8289b514" prot="public" virt="non-virtual"><scope>enve::shape</scope><name>isApprox</name></member>
      <member refid="a00089_1a60dd88c2bd58b71d534cc92d6d5f56f9" prot="private" virt="non-virtual"><scope>enve::shape</scope><name>m_maxR</name></member>
      <member refid="a00089_1a6bf4c2c1ef6049a4a5748cc1e64497b6" prot="private" virt="non-virtual"><scope>enve::shape</scope><name>m_maxY</name></member>
      <member refid="a00089_1aa637dc06ac5012754a88ff504b55127e" prot="private" virt="non-virtual"><scope>enve::shape</scope><name>m_minY</name></member>
      <member refid="a00089_1a25fb65951d112f9f4595b07c8c8b3630" prot="public" virt="non-virtual"><scope>enve::shape</scope><name>print</name></member>
      <member refid="a00089_1a3ce2310bdfbf3557035dc8133d0b0f88" prot="public" virt="non-virtual"><scope>enve::shape</scope><name>ptr</name></member>
      <member refid="a00089_1ad73f91566c660897b63fa840f9a78412" prot="public" virt="non-virtual"><scope>enve::shape</scope><name>shape</name></member>
      <member refid="a00089_1a1df9aab204c0a93923c233ccf0bfd54c" prot="public" virt="non-virtual"><scope>enve::shape</scope><name>shape</name></member>
      <member refid="a00089_1a451509b55546ad54f4d816786554f79e" prot="public" virt="non-virtual"><scope>enve::shape</scope><name>shape</name></member>
      <member refid="a00089_1a42c8dc5ce2976b3e078f696b042c9f32" prot="public" virt="pure-virtual"><scope>enve::shape</scope><name>surfaceAngle</name></member>
      <member refid="a00089_1aa6e1551c4b716b5fd41e91c83ca2abd3" prot="public" virt="pure-virtual"><scope>enve::shape</scope><name>surfaceDerivative</name></member>
      <member refid="a00089_1ac85f00278892b2330e9325209a16e478" prot="public" virt="non-virtual"><scope>enve::shape</scope><name>surfaceMaxRadius</name></member>
      <member refid="a00089_1a3a2d0b37330222933ceb591d1c80c82e" prot="public" virt="non-virtual"><scope>enve::shape</scope><name>surfaceMaxRadius</name></member>
      <member refid="a00089_1a84f2e4ba9b2d14b40c28c13808f52b0b" prot="public" virt="non-virtual"><scope>enve::shape</scope><name>surfaceMaxWidth</name></member>
      <member refid="a00089_1aa66cc1f3a1f9fea9185f274015900da3" prot="public" virt="pure-virtual"><scope>enve::shape</scope><name>surfaceRadius</name></member>
      <member refid="a00089_1afa694bcea531f52cbc33c4586202e1a8" prot="public" virt="non-virtual"><scope>enve::shape</scope><name>surfaceWidth</name></member>
      <member refid="a00089_1a2d34c12f16852f76da529c00abc9d4a6" prot="public" virt="non-virtual"><scope>enve::shape</scope><name>surfaceWidthLowerBound</name></member>
      <member refid="a00089_1abcbef9ab73ba72c1ab7723f7026371b7" prot="public" virt="non-virtual"><scope>enve::shape</scope><name>surfaceWidthLowerBound</name></member>
      <member refid="a00089_1aa55f0ba9ddef8f1dca8e7ee13726c5e0" prot="public" virt="non-virtual"><scope>enve::shape</scope><name>surfaceWidthUpperBound</name></member>
      <member refid="a00089_1a968a6c23bd4c145ca4fb14be213d374c" prot="public" virt="non-virtual"><scope>enve::shape</scope><name>surfaceWidthUpperBound</name></member>
      <member refid="a00089_1a49d70ac4952e445499b69eb28f182eb8" prot="public" virt="non-virtual"><scope>enve::shape</scope><name>vecptr</name></member>
      <member refid="a00089_1acecd8531fa8ba0ffbc75d6234140c6a1" prot="public" virt="virtual"><scope>enve::shape</scope><name>~shape</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
